CREATE TABLE dwd_sms (
  data_id String,
  data_type String,
  child_type String,
  auth_type String,
  imsi String,
  calling_imei String,
  calling_imsi String,
  called_imei String,
  called_imsi String,
  calling_number String,
  called_number String,
  third_numbergroup String,
  start_time Long,
  end_time Long,
  last_time Integer,
  send_time Long,
  calling_atrribution String,
  called_atrribution String,
  longitude Double,
  latitude Double,
  location_id String,
  phone_attribution String,
  called_phone_attribution String,
  `action` String,
  file_id String,
  file_path String,
  sms_lang String,
  sms_text String,
  call_id Long,
  call_flag Integer,
  record_flag Integer,
  online_flag Integer,
  call_code Integer,
  base_station_id String,
  bs_attribution String,
  ci String,
  station_type String,
  called_bs_attribution String,
  isp_id String,
  clue_id String,
  point_code String,
  imei String,
  mcc String,
  mnc String,
  lac String,
  cell_id String,
  capture_time Long,
  capture_day String,
  capture_hour Integer,
  link_layer_id Long,
  in_unit String,
  out_unit String,
  insert_time Long,
  data_type_map String,
  child_type_map String,
  action_map String,
  isp_id_map String,
  mark String,
  file_size Integer,
  calling_province_attribution String,
  called_province_attribution String,
  calling_isp String,
  called_isp String,
  time_span String,
  calling_number_risk_level String,
  called_number_risk_level String,
  calling_terrorist_area String,
  called_terrorist_area String,
  calling_sensitive_area String,
  called_sensitive_area String,
  sms_type String,
  proper_noun String,
  norm_data_type String,
  spam_flag Integer,
  calling_network_type String,
  called_network_type String,
  b_point_code String,
  roam_type String,
  calling_roam String,
  called_roam String,
  a_point_country String,
  b_point_country String
) WITH (
  'type' = 'kafka',
  'topic' = 'v64_dwd_sms',
  'bootstrap.servers' = 'hdp-01:6667,hdp-02:6667,hdp-03:6667,hdp-04:6667,hdp-07:6667,hdp-05:6667,hdp-06:6667,hdp-08:6667',
  'zookeeper.connect' = 'hdp-01:2181,hdp-02:2181,hdp-03:2181,hdp-04:2181,hdp-07:2181,hdp-05:2181,hdp-06:2181',
  'group.id' = 'dwd_ai_sms_gk',
  'security.mode.flag' = 'false',
  'enable.auto.commit' = 'false',
  'auto.offset.reset' = 'latest',
  'session.timeout.ms' = '30000',
  'format.type' = 'avro',
  'feature.max.poll.records' = '1000',
  'feature.fetch.max.bytes' = '11534336',
  'feature.max.partition.fetch.bytes' = '11534336',
  'feature.fetch.message.max.bytes' = '11534336',
  'feature.request.timeout.ms' = '120000'
);
CREATE TABLE dwd_ai_sms_gk (
  data_id String,
  call_id Long,
  `action` String,
  calling_number String,
  called_number String,
  sms_lang String,
  sms_text String,
  capture_time Bigint,
  capture_day String,
  capture_hour Integer,
  insert_time Bigint
) WITH (
  'type' = 'kafka',
  'topic' = 'v64_dwd_ai_sms_gk',
  'bootstrap.servers' = 'hdp-01:6667,hdp-02:6667,hdp-03:6667,hdp-04:6667,hdp-07:6667,hdp-05:6667,hdp-06:6667,hdp-08:6667',
  'zookeeper.connect' = 'hdp-01:2181,hdp-02:2181,hdp-03:2181,hdp-04:2181,hdp-07:2181,hdp-05:2181,hdp-06:2181',
  'security.mode.flag' = 'false',
  'batch.size' = '1048576',
  'acks' = '1',
  'format.type' = 'json',
  'linger.ms' = '100',
  'buffer.memory' = '33554432',
  'retries' = '1',
  'feature.max.request.size' = '52428800'
);
INSERT INTO
  dwd_ai_sms_gk
SELECT
  data_id,
  call_id,
  `action`,
  calling_number,
  called_number,
  sms_lang,
  sms_text,
  capture_time,
  capture_day,
  capture_hour,
  unix_timestamp() * 1000 as insert_time
FROM
  dwd_sms
  WHERE ((capture_time >= UNIX_TIMESTAMP('2025-06-15 08:00:00') * 1000 AND capture_time <= UNIX_TIMESTAMP('2025-06-15 18:30:00') * 1000)
	       OR (capture_time >= UNIX_TIMESTAMP('2025-06-16 08:00:00') * 1000 AND capture_time <= UNIX_TIMESTAMP('2025-06-16 18:30:00') * 1000)
	       OR (capture_time >= UNIX_TIMESTAMP('2025-06-17 07:30:00') * 1000 AND capture_time <= UNIX_TIMESTAMP('2025-06-17 18:30:00') * 1000)
	       OR (capture_time >= UNIX_TIMESTAMP('2025-06-18 08:00:00') * 1000 AND capture_time <= UNIX_TIMESTAMP('2025-06-18 18:30:00') * 1000)
	       OR (capture_time >= UNIX_TIMESTAMP('2025-06-19 08:00:00') * 1000 AND capture_time <= UNIX_TIMESTAMP('2025-06-19 18:30:00') * 1000)
	      )
    AND (
           (CHAR_LENGTH(calling_number) > 7 AND (called_number = '' OR CHAR_LENGTH(called_number) > 7))
        OR (CHAR_LENGTH(called_number) > 7 AND (calling_number = '' OR CHAR_LENGTH(calling_number) > 7))
        )
    AND CHAR_LENGTH(sms_text) > 10 AND CHAR_LENGTH(sms_text) <= 256;
