---
# Doris集群IP迁移脚本 (精简版)
# 使用方法:
# 阶段1 - FQDN改造: ansible-playbook -i inventory/doris_old.ini doris-ip-update.yml --tags "fqdn_setup"
# 阶段2 - IP迁移: ansible-playbook -i inventory/doris_new.ini doris-ip-update.yml --tags "ip_migration" --extra-vars "new_network=192.168.28"

# 全局变量
- name: "设置全局变量"
  hosts: localhost
  gather_facts: no
  tags: ["always"]
  vars:
    doris_home: "/home/semptian/apache-doris-2.1.6-bin-x64"
    mysql_conn: "-h 192.168.15.62 -P 9030 -u root -p123456"
    old_network: "192.168.15"
    fe_nodes: ["doris-s1", "doris-s3", "doris-s11", "doris-s12", "doris-s20"]
    master_node: "doris-s12"
  tasks:
    - name: 设置全局变量
      set_fact:
        doris_home: "{{ doris_home }}"
        mysql_conn: "{{ mysql_conn }}"
        backup_suffix: "{{ ansible_date_time.strftime('%Y%m%d_%H%M%S') }}"

# 检查依赖
- name: "检查MySQL客户端"
  hosts: doris_cluster:localhost
  gather_facts: no
  tags: ["fqdn_setup", "ip_migration"]
  tasks:
    - name: 检查MySQL客户端
      shell: command -v mysql
      register: mysql_check
      failed_when: mysql_check.rc != 0
      ignore_errors: yes
    - name: 安装提示
      fail:
        msg: "请安装MySQL客户端: sudo apt install mysql-client"
      when: mysql_check.rc != 0

# 阶段1: FQDN改造
- name: "阶段1: 关闭分片均衡"
  hosts: localhost
  gather_facts: no
  tags: ["fqdn_setup"]
  tasks:
    - name: 关闭分片均衡功能
      shell: |
        mysql {{ mysql_conn }} -e "
        admin set frontend config('disable_balance' = 'true');
        admin set frontend config('disable_colocate_balance' = 'true');
        admin set frontend config('disable_tablet_scheduler' = 'true');"

- name: "阶段1: 准备工作"
  hosts: doris_cluster
  gather_facts: yes
  tags: ["fqdn_setup"]
  tasks:
    - name: 停止服务和禁用自启动
      shell: |
        systemctl disable be-service fe-service 2>/dev/null || true
        {% if inventory_hostname == "doris-s2" %}
        cd /home/semptian/doris-manager/webserver/bin && ./stop 2>/dev/null || true
        {% endif %}
        cd /home/semptian/manager-agent/bin && ./stop.sh 2>/dev/null || true
      ignore_errors: yes

- name: "阶段1: 更新hosts文件"
  hosts: doris_cluster
  gather_facts: no
  tags: ["fqdn_setup", "ip_migration"]
  tasks:
    - name: 备份并清理hosts
      shell: |
        cp /etc/hosts /etc/hosts.backup.{{ hostvars['localhost']['backup_suffix'] }}
        sed -i '/192\.168\.(15|28)\.[0-9]\+ doris-s[0-9]\+/d' /etc/hosts
        sed -i '/# BEGIN DORIS CLUSTER/,/# END DORIS CLUSTER/d' /etc/hosts

    - name: 生成hosts内容
      set_fact:
        network_prefix: "{% if 'ip_migration' in ansible_run_tags %}{{ new_network | default('192.168.28') }}{% else %}192.168.15{% endif %}"
        ip_start: "{% if 'ip_migration' in ansible_run_tags %}101{% else %}51{% endif %}"

    - name: 更新hosts文件
      blockinfile:
        path: /etc/hosts
        marker: "# {mark} DORIS CLUSTER HOSTS"
        block: |
          {% for i in range(1, 34) %}
          {{ network_prefix }}.{{ (ip_start | int) + i - 1 }} doris-s{{ i }}
          {% endfor %}

- name: "阶段1: FE节点FQDN改造"
  hosts: doris-s1,doris-s3,doris-s11,doris-s20
  gather_facts: no
  serial: 1
  tags: ["fqdn_setup"]
  tasks:
    - name: 备份并配置FE
      shell: |
        cd {{ hostvars['localhost']['doris_home'] }}/fe
        cp -r doris-meta doris-meta-bak{{ hostvars['localhost']['backup_suffix'] }}
        cp conf/fe.conf conf/fe.conf-bak{{ hostvars['localhost']['backup_suffix'] }}
        echo "enable_fqdn_mode = true" >> conf/fe.conf

    - name: 设置FQDN并重启FE
      shell: |
        # 设置FQDN
        mysql {{ hostvars['localhost']['mysql_conn'] }} -e "
        ALTER SYSTEM MODIFY FRONTEND '192.168.15.{{ ansible_default_ipv4.address.split('.')[3] }}:9010' HOSTNAME '{{ inventory_hostname }}';"
        
        # 重启FE
        cd {{ hostvars['localhost']['doris_home'] }}/fe/bin
        ./stop_fe.sh
        sleep 10
        ./start_fe.sh --helper doris-s12:9010 --daemon
      ignore_errors: yes

    - name: 等待FE启动
      wait_for:
        port: 9030
        timeout: 120
      ignore_errors: yes

- name: "阶段1: Master节点FQDN改造"
  hosts: doris-s12
  gather_facts: no
  tags: ["fqdn_setup"]
  tasks:
    - name: 备份并配置Master FE
      shell: |
        cd {{ hostvars['localhost']['doris_home'] }}/fe
        cp -r doris-meta doris-meta-bak{{ hostvars['localhost']['backup_suffix'] }}
        cp conf/fe.conf conf/fe.conf-bak{{ hostvars['localhost']['backup_suffix'] }}
        echo "enable_fqdn_mode = true" >> conf/fe.conf
        
        # 停止Master触发选主
        cd bin && ./stop_fe.sh
        sleep 30

- name: "阶段1: 完成Master FQDN设置"
  hosts: localhost
  gather_facts: no
  tags: ["fqdn_setup"]
  tasks:
    - name: 检测新Master并设置原Master FQDN
      shell: |
        # 找到新Master
        for ip in 192.168.15.51 192.168.15.53 192.168.15.61 192.168.15.70; do
          new_master=$(mysql -h $ip -P 9030 -u root -p123456 -e "SHOW FRONTENDS;" 2>/dev/null | grep -E "true.*MASTER" | awk '{print $2}')
          if [ ! -z "$new_master" ]; then
            # 设置原Master FQDN
            mysql -h $ip -P 9030 -u root -p123456 -e "ALTER SYSTEM MODIFY FRONTEND '192.168.15.62:9010' HOSTNAME 'doris-s12';"
            echo $ip
            break
          fi
        done
      register: new_master_result

    - name: 启动原Master节点
      shell: |
        ssh doris-s12 "cd {{ doris_home }}/fe/bin && ./start_fe.sh --helper {{ new_master_result.stdout }}:9010 --daemon"
      when: new_master_result.stdout != ""

    - name: 设置BE节点FQDN
      shell: |
        mysql {{ mysql_conn }} -e "
        ALTER SYSTEM MODIFY BACKEND '192.168.15.{{ item }}:9050' HOSTNAME 'doris-s{{ item - 50 }}';"
      loop: "{{ range(51, 84) | list }}"
      throttle: 5
      ignore_errors: yes

    - name: 显示FQDN改造完成信息
      debug:
        msg: |
          ========================================
          FQDN改造完成！现在可以执行IP迁移：
          ansible-playbook -i inventory/doris_new.ini doris-ip-update-simplified.yml --tags "ip_migration" --extra-vars "new_network=192.168.28"
          ========================================

# 阶段2: IP迁移
- name: "阶段2: 验证参数"
  hosts: localhost
  gather_facts: no
  tags: ["ip_migration"]
  tasks:
    - name: 检查new_network参数
      fail:
        msg: "请提供new_network参数: --extra-vars 'new_network=192.168.28'"
      when: new_network is not defined

- name: "阶段2: 停止所有服务"
  hosts: doris_cluster
  gather_facts: no
  tags: ["ip_migration"]
  tasks:
    - name: 停止Doris服务
      shell: |
        cd {{ hostvars['localhost']['doris_home'] }}
        be/bin/stop_be.sh 2>/dev/null || true
        fe/bin/stop_fe.sh 2>/dev/null || true
        sleep 5
      ignore_errors: yes

- name: "阶段2: 更新配置文件"
  hosts: doris_cluster
  gather_facts: no
  tags: ["ip_migration"]
  tasks:
    - name: 更新priority_networks配置
      lineinfile:
        path: "{{ hostvars['localhost']['doris_home'] }}/{{ item }}/conf/{{ item }}.conf"
        regexp: '^priority_networks\s*='
        line: "priority_networks = {{ new_network }}.0/24"
        backup: yes
      loop: ["fe", "be"]
      ignore_errors: yes

- name: "阶段2: 启动服务"
  hosts: doris_cluster
  gather_facts: no
  serial: 1
  tags: ["ip_migration"]
  tasks:
    - name: 启动FE服务
      shell: |
        cd {{ hostvars['localhost']['doris_home'] }}/fe/bin
        {% if inventory_hostname == "doris-s12" %}
        ./start_fe.sh --daemon
        {% else %}
        ./start_fe.sh --helper {{ new_network }}.112:9010 --daemon
        {% endif %}
      when: inventory_hostname in hostvars['localhost']['fe_nodes']

    - name: 启动BE服务
      shell: |
        cd {{ hostvars['localhost']['doris_home'] }}/be/bin
        ./start_be.sh --daemon
      when: inventory_hostname not in hostvars['localhost']['fe_nodes']

    - name: 等待服务启动
      wait_for:
        port: "{{ '9030' if inventory_hostname in hostvars['localhost']['fe_nodes'] else '9060' }}"
        timeout: 120
      ignore_errors: yes

- name: "阶段2: 恢复管理服务"
  hosts: doris_cluster
  gather_facts: no
  tags: ["ip_migration"]
  tasks:
    - name: 启动管理服务并恢复自启动
      shell: |
        {% if inventory_hostname == "doris-s2" %}
        cd /home/semptian/doris-manager/webserver/bin && ./start.sh &
        {% endif %}
        cd /home/semptian/manager-agent/bin && ./start.sh &
        systemctl enable be-service fe-service 2>/dev/null || true
      ignore_errors: yes

- name: "阶段2: 开启分片均衡"
  hosts: localhost
  gather_facts: no
  tags: ["ip_migration"]
  tasks:
    - name: 等待集群稳定
      pause:
        seconds: 30
        prompt: "等待集群稳定..."

    - name: 开启分片均衡功能
      shell: |
        mysql -h {{ new_network }}.112 -P 9030 -u root -p123456 -e "
        admin set frontend config('disable_balance' = 'false');
        admin set frontend config('disable_colocate_balance' = 'false');
        admin set frontend config('disable_tablet_scheduler' = 'false');"
      ignore_errors: yes

    - name: 显示完成信息
      debug:
        msg: |
          ========================================
          IP迁移完成！
          新的连接地址: mysql -h {{ new_network }}.112 -P 9030 -u root -p123456
          FE管理界面: http://{{ new_network }}.101:8030
          Doris Manager: http://{{ new_network }}.102:8004
          ========================================
